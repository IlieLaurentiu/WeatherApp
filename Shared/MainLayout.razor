@inherits LayoutComponentBase
@inject SomeStateService someStateService

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h6" Class="ml-4">@title_text</MudText>
        <MudSpacer />
        @if (someStateService.isFahrenheit)
        {
            <MudText Color="Color.Success" Class="mr-4" Typo="Typo.h6">°F</MudText>
            <MudIconButton Icon="@Icons.Material.Filled.Check" Color="Color.Success" Edge="Edge.Start" OnClick="@((e) => SwitchTemperatureUnit())" />
        }
        else
        {
            <MudText Color="Color.Error" Class="mr-4" Typo="Typo.h6">°F</MudText>
            <MudIconButton Icon="@Icons.Material.Filled.NotInterested" Color="Color.Error" Edge="Edge.Start" OnClick="@((e) => SwitchTemperatureUnit())" />
        }
        <MudLink href="counter">
            <MudButton>
                <MudAvatar Color="Color.Secondary">
                    <MudIcon Color="Color.Surface" Icon="@Icons.Material.Filled.Person" Size="Size.Medium" />
                </MudAvatar>
            </MudButton>
        </MudLink>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Weather Forecast</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = false;
    string title_text = "Forecast";

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task SwitchTemperatureUnit()
    {
        await someStateService.ToggleFahrenheit();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        someStateService.RefreshView += async (sender) => await RefreshView();
    }

    async Task RefreshView()
    {
        StateHasChanged();
    }
}